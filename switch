#!/usr/bin/env bash
if [ $1 == "event" ]; then
  cat package.json | yarn jqn 'u => {u.homepage = "https://hacktj.org/2021"; u.reactSnap.inlineCss = false; return u;}' --color=false > tmp.$$.json && mv tmp.$$.json package.json
  sed 's|<Routes>|<Routes basename="/2021">|' src/App.tsx > src/tmp.$$.js && mv src/tmp.$$.js src/App.tsx
  cat public/manifest.json | yarn jqn 'u => {u.start_url = "/2021"; return u;}' --color=false > tmp.$$.json && mv tmp.$$.json public/manifest.json
  cat public/manifest.json | yarn jqn 'u => {u.short_name = "HackTJ 8.0"; return u;}' --color=false > tmp.$$.json && mv tmp.$$.json public/manifest.json
  sed 's|<base href="/" />|<base href="/2021" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<title>HackTJ</title>|<title>HackTJ 8.0</title>|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<meta property="og:title" content="HackTJ" />|<meta property="og:title" content="HackTJ 8.0" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<meta property="og:site_name" content="HackTJ" />|<meta property="og:site_name" content="HackTJ 8.0" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<meta name="twitter:title" content="HackTJ" />|<meta name="twitter:title" content="HackTJ 8.0" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  rm -f public/CNAME
  git remote set-url origin git@github.com:HackTJ/2021.git
elif [ $1 == "homepage" ]; then
  cat package.json | yarn jqn 'u => {u.homepage = "https://hacktj.org"; u.reactSnap.inlineCss = true; return u;}' --color=false > tmp.$$.json && mv tmp.$$.json package.json
  sed 's|<Routes basename="/2021">|<Routes>|' src/App.tsx > src/tmp.$$.js && mv src/tmp.$$.js src/App.tsx
  cat public/manifest.json | yarn jqn 'u => {u.start_url = "/"; return u;}' --color=false > tmp.$$.json && mv tmp.$$.json public/manifest.json
  cat public/manifest.json | yarn jqn 'u => {u.short_name = "HackTJ"; return u;}' --color=false > tmp.$$.json && mv tmp.$$.json public/manifest.json
  sed 's|<base href="/2021" />|<base href="/" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<title>HackTJ 8.0</title>|<title>HackTJ</title>|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<meta property="og:title" content="HackTJ 8.0" />|<meta property="og:title" content="HackTJ" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<meta property="og:site_name" content="HackTJ 8.0" />|<meta property="og:site_name" content="HackTJ" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  sed 's|<meta name="twitter:title" content="HackTJ 8.0" />|<meta name="twitter:title" content="HackTJ" />|' public/index.html > public/tmp.$$.html && mv public/tmp.$$.html public/index.html
  cp CNAME.homepage public/CNAME
  git remote set-url origin git@github.com:HackTJ/hacktj.github.io.git
else
  echo "Invalid argument"
  exit 128
fi
